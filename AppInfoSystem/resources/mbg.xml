<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
  PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
  "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
	<!-- classPathEntry:数据库的JDBC驱动的jar包地址-->
	<!-- <classPathEntry location="/Program Files/IBM/SQLLIB/java/db2java.zip" /> -->
	
	<!-- targetRuntime="MyBatis3Simple":生成简单版的CRUD MyBatis3:豪华版 -->
	<context id="DB2Tables" targetRuntime="MyBatis3">
		<commentGenerator>
		    <!-- 是否去除自动生成的注释 true：是；false:否 -->
		    <property name="suppressAllComments" value="true" />
		    <!--数据库连接的信息：驱动类、连接地址、用户名、密码 -->
		  </commentGenerator>
		<!-- jdbcConnection：指定如何连接到目标数据库 -->
		<jdbcConnection driverClass="com.mysql.jdbc.Driver"
			connectionURL="jdbc:mysql://localhost:3306/appinfodb?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false"
			userId="root" password="jzbr">
		</jdbcConnection>

		<!--  是否将JDBC DECIMAL 和 NUMERIC 类型解析为 java.math.BigDecimal
         true:转换为BigDecimal；false：转换为Integer -->
		<javaTypeResolver>
			<property name="forceBigDecimals" value="false" />
		</javaTypeResolver>

		<!-- javaModelGenerator：指定javaBean的生成策略 targetPackage="test.model"：目标包名 
			targetProject="\MBGTestProject\src"：目标工程 -->
		<javaModelGenerator targetPackage="cn.appsys.pojo"
			targetProject=".\src">
			<property name="enableSubPackages" value="true" />
			<property name="trimStrings" value="false" />
		</javaModelGenerator>

		<!-- sqlMapGenerator：sql映射生成策略： -->
		<sqlMapGenerator targetPackage="cn.appsys.dao"
			targetProject=".\resources">
			<property name="enableSubPackages" value="false" />
		</sqlMapGenerator>

		<!-- javaClientGenerator:指定mapper接口所在的位置 -->
		<javaClientGenerator type="XMLMAPPER"
			targetPackage="cn.appsys.dao" targetProject=".\src">
			<property name="enableSubPackages" value="false" />
		</javaClientGenerator>

		<!-- 指定要逆向分析哪些表：根据表要创建javaBean -->
		<!-- <table schema="DB2ADMIN" tableName="ALLTYPES" domainObjectName="Customer">
				<property name="useActualColumnNames" value="true" />
				<generatedKey column="ID" sqlStatement="DB2" identity="true" />
				<columnOverride column="DATE_FIELD" property="startDate" />
				<ignoreColumn column="FRED" />
				<columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" />
			</table> -->
		 
		<table tableName="ad_promotion" domainObjectName="AdPromotion">
			<!--生成实体类时是否使用实际的列名作为实体类的属性名-->
			<property name="useActualColumnNames" value="true" />
		</table>
		<table tableName="app_category" domainObjectName="AppCategory">
			<property name="useActualColumnNames" value="true" />
		</table>
		<table tableName="app_info" domainObjectName="AppInfo">
			<property name="useActualColumnNames" value="true" />
		</table>
		<table tableName="app_version" domainObjectName="AppVersion">
			<property name="useActualColumnNames" value="true" />
		</table>
		<table tableName="backend_user" domainObjectName="BackendUser">
			<property name="useActualColumnNames" value="true" />
		</table>
		<table tableName="data_dictionary" domainObjectName="DataDictionary">
			<property name="useActualColumnNames" value="true" />
		</table>
		<table tableName="dev_user" domainObjectName="DevUser">
			<property name="useActualColumnNames" value="true" />
		</table>
	</context>
	
	<!-- 
	@Test
	public void testMbg() throws Exception {
		List<String> warnings = new ArrayList<String>();
		boolean overwrite = true;
		File configFile = new File("mbg.xml");
		ConfigurationParser cp = new ConfigurationParser(warnings);
		Configuration config = cp.parseConfiguration(configFile);
		DefaultShellCallback callback = new DefaultShellCallback(overwrite);
		MyBatisGenerator myBatisGenerator = new MyBatisGenerator(config,
				callback, warnings);
		myBatisGenerator.generate(null);
	}
	 -->
	
</generatorConfiguration>
