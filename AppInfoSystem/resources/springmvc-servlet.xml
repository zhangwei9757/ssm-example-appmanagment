<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
         http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

	<!--配置 SpringMVC 的 IOC 容器自动扫描包 -->
	<context:component-scan base-package="cn.appsys.controller.backend">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>
	<context:component-scan base-package="cn.appsys.controller.developer">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>

	<!-- 配置静态资源路径引用解决方案:1 -->
	<!-- <mvc:resources location="/statics/" mapping="/statics/**"></mvc:resources>  -->
	<!-- 配置静态资源路径引用解决方案:2 -->
	<mvc:default-servlet-handler />

	<!-- 配置 mvc:annotation 注解驱动 -->
	<mvc:annotation-driven />

	<mvc:annotation-driven>
   		<mvc:message-converters>
   			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
   				<property name="supportedMediaTypes">
   					<list>
   						<value>application/json;charset=UTF-8</value>
   					</list>
   				</property>
   			</bean>
   			<bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
   				<property name="supportedMediaTypes">
   					<list>
   						<value>text/html;charset=UTF-8</value>
   						<value>application/json</value>
   					</list>
   				</property>
   				<property name="features">
   					<list>
   						<value>WriteDateUseDateFormat</value>
   					</list>
   				</property>
   			</bean>
   		</mvc:message-converters>
   </mvc:annotation-driven>

	<!-- 配置多视图解析器ContentNegotiatingViewResolver 
		   取代 InternalResourceViewResolver视图解析器 -->
	 <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="favorParameter" value="true"/> 
        <property name="defaultContentType" value="text/html" /> 
        <property name="mediaTypes">
            <map>
            	<entry key="html" value="text/html;charset=UTF-8"/>
                <entry key="json" value="application/json;charset=UTF-8"/>
                <entry key="xml" value="application/xml;charset=UTF-8"/>
            </map>
        </property>
        <property name="viewResolvers">
            <list>
                <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
				   <property name="prefix" value="/WEB-INF/jsp/"/>
				   <property name="suffix" value=".jsp"/>
			   </bean>
            </list>
        </property>
    </bean>

	<!-- SpringMVC全局异常配置:error显示路径 -->
	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- 配置异常类型 -->
				<prop key="java.lang.RuntimeException">403</prop>
			</props>
		</property>
	</bean>

	<!-- 设置Aop环绕增加，打印:①入参②异常③返回值 -->
	<bean class="cn.appsys.tools.ErrorLogger"></bean>
	<aop:aspectj-autoproxy />

	<!-- 配置 mvc:自定义view (要实现View接口render方法重写) fmt标签驱动 -->
	<mvc:view-controller path="demo" view-name="demo" />

	<!--配置multipartResolver,用于上传文件，使用CommonsMultipartResolver -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8"></property><!--单位：字节 -->
		<property name="maxUploadSize" value="5000000"></property>
	</bean>

	<!-- 配置 FormattingConversionServiceFactoryBean, 既可支持自定义转换器，也可支持格式功能(相比ConversionService) -->
	<!-- <mvc:annotation-driven conversion-service="conversionService"></mvc:annotation-driven>
	<bean id="conversionService"
			class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
			<property name="converters">
				<list>
				自定义转换器1
					<bean class="cn.appsys.interceptor.EmployeeConverter">自己定义的实现Converter<String,Date>的实现类
						<constructor-arg type="java.lang.String" value="yyyy-MM-dd"></constructor-arg>
					</bean>
				</list>
				<set>
					<ref bean="employeeConverter" />自定义转换器2
				</set>
			</property>
		</bean> -->

	<!-- 配置国际化资源文件 ,用于支持本地化Locale -->
	<!-- <bean id="messageSource"
			class="org.springframework.context.support.ResourceBundleMessageSource">
			<property name="basename" value="i18n"></property>
		</bean> -->

	<!--配置拦截器 interceptor 返回false结束handleAdape调用 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/manager/backend/**"/>
			<mvc:mapping path="/dev/flatform/**"/>
			<bean class="cn.appsys.interceptor.SysInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>
	
</beans>
