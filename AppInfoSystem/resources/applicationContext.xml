<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
         http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
        http://www.springframework.org/schema/cache
         http://www.springframework.org/schema/cache/spring-cache.xsd
         http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring
         http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-3.2.xsd" >
    <!--设置基包扫描 :前提是使用注解注入 -->
	<context:component-scan base-package="cn.appsys.dao"></context:component-scan>
    <context:component-scan base-package="cn.appsys.pojo"></context:component-scan> 
    <context:component-scan base-package="cn.appsys.controller.backend">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
		expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>
	<context:component-scan base-package="cn.appsys.controller.developer">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
		expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>
    
	<!-- 配置支持缓存注解 -->
	<cache:annotation-driven cache-manager="ehcacheManager" />
	
	<!-- 配置默认是cacheManager -->
	<bean id="ehcacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
	  <property name="cacheManager" ref="ehcacheManagerFactory"/>
	</bean>
	
	<!-- 配置cacheManager工厂类，指定ehcache.xml的位置 -->
	<bean id="ehcacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
	  <property name="configLocation" value="classpath:ehcache.xml"/>
	  <!-- <property name="shared" value="true" /> -->
	</bean>
       
	<!-- 配置数据源:方式1 -->
	<!-- <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> 
			<property name="location" value="classpath:mysql.Properties" /> 
		 </bean> -->
	
	<!-- 配置数据源:方式2 -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	<!-- <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
			<property name="jdbcUrl" value="${jdbc.url}"></property>
			<property name="driverClass" value="${jdbc.driver}"></property>
			<property name="user" value="${jdbc.username}"></property>
			<property name="password" value="${jdbc.password}"></property>
		 </bean> -->
	 
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" >
		<property name="driverClassName" value="${jdbc.driver}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="initialSize" value="${jdbc.initialSize}"/>
		<property name="maxActive" value="${jdbc.maxActive}"/>
		<property name="maxIdle" value="${jdbc.maxIdle}"/>
		<property name="minIdle" value="${jdbc.minIdle}"/>
		<property name="maxWait" value="${jdbc.maxWait}"/>
		<property name="removeAbandoned" value="${jdbc.removeAbandoned}"/>
		<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}"/>
		<property name= "testWhileIdle" value="true"/>
		<property name= "timeBetweenEvictionRunsMillis" value="60000"/>
		<property name= "testOnBorrow" value="false"/>
		<property name= "testOnReturn" value="false"/>
		<property name= "validationQuery" value="select 1"/>
		<property name= "numTestsPerEvictionRun" value="${jdbc.maxActive}"/>
	</bean>
	
	<!--配置 JNDI数据源 -->
	<!-- <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> 
			<property name="jndiName" value="java:comp/env/jdbc/smbms"></property> 
		 </bean> -->
	
	<!-- 配置数据库声明'事务'管理 -->
	<bean id="txManage"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource"></bean>
	
	<!-- 实例化 sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<property name="mapperLocations" value="classpath:cn/appsys/dao/*.xml"></property> 
	</bean>
	
	<!--配置AOP事务  -->
	<aop:config proxy-target-class="true">
		<aop:pointcut id="transService" expression="execution(* *cn.appsys.controller..*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="transService" />
	</aop:config>
	
	<!--把声明的事务设置为可注解声明事务@Transactional -->
	<tx:annotation-driven transaction-manager="txManage" />
	
	<!-- 为事务声明设置属性 -->
	<tx:advice id="txAdvice" transaction-manager="txManage">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>
	
	<!--配置一个可以进行批量执行的sqlSession  -->
	<!-- <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
			<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactoryBean"></constructor-arg>
			<constructor-arg name="executorType" value="BATCH"></constructor-arg>
		</bean> -->

	<!-- 使用MapperScannerConfigurer批量生成映射器 
	<mybatis-spring:scan base-package="cn.appsys.dao"/>-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
		p:basePackage="cn.appsys.dao"></bean>
	
</beans>
